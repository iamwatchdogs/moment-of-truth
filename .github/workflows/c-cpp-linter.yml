name: c-cpp-linter

on:
  pull_request:
    branches: [main]
    paths: ['**.c', '**.cpp']

jobs:
  cpp-linter:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4.1.0
        
      - uses: cpp-linter/cpp-linter-action@v2.6.1
        id: linter
        continue-on-error: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          style: file
          tidy-checks: ''
          thread-comments: true
          step-summary: true
          
      # - name: clang-format-12 -style=Google path/to/filename.x
      #   run: |
      #     clang-format-12 -style=Google c-cpp-test/should-not-pass.c
      #     clang-format-12 -style=Google c-cpp-test/test.c

      - name: Fail checks
        if: steps.linter.outputs.checks-failed > 0
        run: |
          echo "Some files failed the linting checks!"
          echo "No. of checks failed: ${{ steps.linter.outputs.checks-failed }}"
          echo "Use the clang-format diffs to find more help"

      - name: Setup Python
        if: steps.linter.outputs.checks-failed > 0
        uses: actions/setup-python@v4.7.1
        with:
           python-version: '3.12'
        
      # - name: Clang format diff
      #   if: steps.linter.outputs.checks-failed > 0
      #   uses: egor-tensin/clang-format@v1

      - name: Install Clang
        if: steps.linter.outputs.checks-failed > 0
        uses: egor-tensin/setup-clang@v1

      - name: Getting PR details
        if: steps.linter.outputs.checks-failed > 0
        run: |
          touch pr.json
          gh pr view $PR_NUMBER --json files > pr.json
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Python script for clang diff
        if: steps.linter.outputs.checks-failed > 0
        uses: jannekem/run-python-script-action@v1
        with:
          script: |
            import os
            import json
            import sys
            with open('pr.json','r') as json_file:
              data = json.load(json_file)
              for file in data["files"]:
                path = file["path"]
                if os.path.exists(path):
                  os.system(f'clang-format-12 -style=Google {path}')
                  os.system('echo ----------------------------------------')
            sys.exit(1)
